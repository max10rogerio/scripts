
/*--	PROCESSO DE CONVERSAO   --*/



-- PRIMEIRO APAGAR TODOS OS REGISTROS EXISTENTES
DELETE FROM SATIVIDADEEXTRA
DELETE FROM SATIVIDADEALUNO
DELETE FROM SATIVIDADE
DELETE FROM SMODALIDADE

TRUNCATE TABLE SATIVIDADEALUNOCOMPL
TRUNCATE TABLE SATIVIDADECOMPL
TRUNCATE TABLE SATIVIDADEGRADE


-- DEPOIS ATUALIZE AS GAUTOINC PARA 0(ZERO)
UPDATE GAUTOINC SET VALAUTOINC = 0 WHERE CODAUTOINC = 'IDOFERTA'
UPDATE GAUTOINC SET VALAUTOINC = 0 WHERE CODAUTOINC = 'IDATIVIDADE'
UPDATE GAUTOINC SET VALAUTOINC = 0 WHERE CODAUTOINC = 'CODMODALIDADE'



--PEGA OS GRUPOS NO CLASSIS E INSIRA ELES COMO MODALIDADE NO CLASSISNET

BEGIN TRANSACTION CONVERTE_MODALIDADE

	INSERT INTO SMODALIDADE(CODCOLIGADA, CODCOMPONENTE, CODMODALIDADE, DESCRICAO, RECCREATEDBY, RECCREATEDON)
		SELECT CODCOLIGADA, 252 AS CODCOMPONENTE, CODGRPATVCOMP, DESCRICAO, 'max.rogerio', '2017-09-27 00:00:00.000'
			FROM UGRPATVCOMP

IF @@ERROR <> 0
	BEGIN
		ROLLBACK TRANSACTION CONVERTE_MODALIDADE
		SELECT 'Problemas ao inserir os registro na tabela SMODALIDADE - LINHA 28'
	END
ELSE
	BEGIN
		COMMIT TRANSACTION CONVERTE_MODALIDADE
		SELECT 'Sucesso! Inserido os registro na tabela SMODALIDADE'+CHAR(13)+'Atualizando a GAUTOINC - CODMODALIDAE...'
		
		--GAUTOINC SMODALIDADE - CODMODALIDADE
		BEGIN TRANSACTION ATUALIZA_GAUTOINC
			UPDATE GAUTOINC SET VALAUTOINC = (SELECT MAX(CODMODALIDADE) FROM SMODALIDADE)
				WHERE CODAUTOINC = 'CODMODALIDADE'
				
			IF @@ERROR <> 0
				BEGIN
					ROLLBACK TRANSACTION ATUALIZA_GAUTOINC
					SELECT 'Problema ao atualizar GAUTOINC - SMODALIDADE - CODMODALIDADE'
				END
			ELSE
				BEGIN 
					COMMIT TRANSACTION ATUALIZA_GAUTOINC
					SELECT 'Dado atualizado na GAUTOINC - SMODALIDADE - CODMODALIDADE'
				END
	END
--FIM DA TRANSACTION CONVERTE_MODALIDADE


-- INSERINDO AS ATIVIDADES NOS GRUPOS(MODALIDADES)
BEGIN TRANSACTION INSERE_ATIVIDADE
	
	/*-- SETANDO VARIAVEL PARA AUTO_INCREMENT --*/
	DECLARE @NOVOID INT
	SET @NOVOID = (SELECT ISNULL(MAX(IDOFERTA), 0) FROM SATIVIDADE)
	
	INSERT INTO SATIVIDADE (CODCOLIGADA, IDOFERTA, DESCRICAO, CODCOMPONENTE, CODMODALIDADE, 
								CARGAHOR, CARGAHORGRADE, RECCREATEDBY, RECCREATEDON)
	SELECT DISTINCT CODCOLIGADA,
					(@NOVOID+ROW_NUMBER()OVER (ORDER BY UATVCOMPALUNO.DESCRICAO ASC)) 'ID', /*-AUTO_INCREMENT-*/
				    DESCRICAO,
				    252 AS CODCOMPONENTE,
					CODGRPATVCOMP, 
					CARGAHORARIA              AS CH, 
					CARGAHORARIA              AS CHAPROVEITADA,
					'max.rogerio'             AS CREATOR,
					'2017-09-27 00:00:00.000' AS DATAINSERCAO
	FROM UATVCOMPALUNO
	WHERE CODGRPATVCOMP IS NOT NULL AND DESCRICAO IS NOT NULL
	GROUP BY DESCRICAO, CODCOLIGADA, CODGRPATVCOMP, CARGAHORARIA
	ORDER BY DESCRICAO ASC
	
	IF @@ERROR <> 0
		BEGIN
			ROLLBACK TRANSACTION INSERE_ATIVIDADE
			SELECT 'Erro ao inserir dados na tabela SATIVIDADE'
		END
	ELSE
		BEGIN
			COMMIT TRANSACTION INSERE_ATIVIDADE
			SELECT 'Dados inseridos com sucesso na tabela SATIVIDADE'
			
			BEGIN TRANSACTION ATUALIZA_GAUTOINC
				/*-- ATUALIZANDO A TABELA GAUTOINC -> SATIVIDADE -> IDOFERTA --*/
				UPDATE GAUTOINC SET VALAUTOINC = (SELECT ISNULL(MAX(IDOFERTA),0) AS IDOFERTA FROM SATIVIDADE)
					WHERE CODAUTOINC = 'IDOFERTA'
					
				IF @@ERROR <> 0
					BEGIN
						ROLLBACK TRANSACTION ATUALIZA_GAUTOINC
						SELECT 'ERRO AO ATUALIZAR GAUTOINC -> IDOFERTA'
					END
				ELSE
					BEGIN
						COMMIT TRANSACTION ATUALIZA_GAUTOINC
						SELECT 'GAUTOINC -> IDOFERTA --- ATUALIZADA!!!'
					END
		END




/*-- INSERINDO AS GRADES NAS ATIVIDADES --*/
	DECLARE @IDOFERTA INT
	DECLARE @COUNT INT

	SET @IDOFERTA = (SELECT COUNT(*) FROM SATIVIDADE) --22885 registros
	SET @COUNT = 1

	WHILE @COUNT <= @IDOFERTA
		BEGIN
			IF (SELECT IDOFERTA FROM SATIVIDADE WHERE IDOFERTA = @COUNT) > 0
				BEGIN
					INSERT INTO SATIVIDADEGRADE(IDOFERTA, IDHABILITACAOFILIAL, CODCOLIGADA, RECCREATEDBY, RECCREATEDON)
						SELECT  @COUNT AS IDOFERTA, IDHABILITACAOFILIAL, 1, 'max.rogerio', '2017-09-27 00:00:00.000'
						FROM SHABILITACAOFILIAL 
						WHERE CODCURSO IN (SELECT CODCUR FROM UCURSOS WHERE CODCUR BETWEEN 1 AND 54)
				END
			SET @COUNT += 1
		END
/*-- FIM DA INSERÇÃO DAS GRADES NAS ATIVIDADES --*/



/*-- APÓS TERMINAR O WHILE VERIFICAR SE TUDO ESTA DE ACORDO --*/
--QTDE DE REGISTROS NA TABELA: 3020820
SELECT COUNT(*) FROM SATIVIDADEGRADE

--CASO NAO ESTIVER EXECUTAR O TRUNCATE E REAVALIAR O PROCESSO
TRUNCATE TABLE SATIVIDADEGRADE






/*-- TENTATIVA 2 --*/
/*-- Aparentemente foi a que funcionou melhor, deu diferença de 1 registro mais ou menos em alguns alunos. --*/


/*-- Cria uma tabela para guardar as informações da ULTIMA grade do aluno --*/
CREATE TABLE GRADEALUNO(
	MATRICULA INT,
	CURSO INT,
	MAIORGRADE INT,
	TURNO VARCHAR(25),
)

/*-- Insiro na tabela criada acima a ultima grade  --*/
INSERT INTO GRADEALUNO (MATRICULA, CURSO, MAIORGRADE, TURNO)
SELECT 
	 AT.MATALUNO,
	 AC.CODCUR,
	 MAX(AC.GRADE) AS MAIORGRADE,
	 T.DESCTURNO
FROM 
	UATVCOMPALUNO AT
INNER JOIN UALUCURSO AC 
	ON AC.MATALUNO = AT.MATALUNO AND AC.CODCUR = AT.CODCUR AND AT.CODCUR < 100
INNER JOIN ETURNOS T ON T.CODTURNO = AC.CODTUN
GROUP BY
 	AT.MATALUNO, AC.MATALUNO, AT.CODCUR, AC.CODCUR, T.DESCTURNO
ORDER BY AT.MATALUNO ASC


/*-- Busca o IDHABILITACAÇÃOFILIAL maior do curso do aluno --*/
SELECT 
	H.RA, MAX(H.IDHABILITACAOFILIAL) AS MAIORIDHABILITACAO
	INTO #RAHABLIT
FROM
	SHABILITACAOALUNO H,
	GRADEALUNO G
WHERE H.RA = G.MATRICULA
	  /*- Filtro somente o IDHABILITACAOFILIAL de graduação
			validando o curso que está na atvcomplementar
			Na tabela GRADEALUNO, está o curso do vinculado a grade
	  -*/
	  AND H.IDHABILITACAOFILIAL IN (SELECT IDHABILITACAOFILIAL FROM SHABILITACAOFILIAL 
										WHERE CODCURSO <= 100 AND CODCURSO = G.CURSO)
GROUP BY H.RA	
ORDER BY H.RA



/*-- Inicio a operação final, vinculando os alunos nas atividades na SATIVIDADEALUNO --*/
/*--
		utilizei como referencia o maior IDHABILITACAOFILIAL, conferi alguns casos
		Exemplo: Alunos somente com uma GRADE, passou as atividades corretamente.
				 Conferi um caso de um aluno que teve mudança de curso, as 
			  	 atividades foram para o curso que estava matriculado.
				 Conferi um caso de uma aluno que teve mudança de grade no mesmo curso
				 o mesmo, as atividades foram para a IDHABILITACAOFILIAL, para a qual
				 ele estava formado.
--*/

BEGIN TRANSACTION ALUNO_ATIVIDADE
	DECLARE @ID INT
	SET @ID = (SELECT ISNULL(MAX(IDATIVIDADE),0) FROM SATIVIDADEALUNO) /*inicia contador*/
	
	/*-- campos da tabela para insercao --*/
	INSERT INTO SATIVIDADEALUNO (CODCOLIGADA, 
								 IDATIVIDADE, 
								 IDHABILITACAOFILIAL, 
								 RA, 
								 IDPERLET, 
								 IDOFERTA, 
								 CODCOMPONENTE,
								 CODMODALIDADE, 
								 CARGAHORARIA, 
								 CUMPRIUATIVIDADE, 
								 CARGAHORARIAATV,
								 DATA,
								 RECCREATEDBY, 
								 RECCREATEDON)
	/*-- inserção via select --*/
	SELECT S.CODCOLIGADA,
		   (@ID+ROW_NUMBER()OVER (ORDER BY S.DESCRICAO ASC)) AS ID, /*-- auto_increment --*/
		   R.MAIORIDHABILITACAO,
		   U.MATALUNO,
		   (SELECT IDPERLET FROM SPLETIVO WHERE CODPERLET = U.CODPERLET) AS PERIODOLETIVO,
		   S.IDOFERTA,
		   S.CODCOMPONENTE,
		   S.CODMODALIDADE,
		   S.CARGAHOR,
		   'S' AS CUMPRIUATIVIDADE,
		   S.CARGAHORGRADE,
		   U.DATAINSCRICAO,
		   'max.rogerio' AS USERCREATED,
		   '2017-09-27 00:00:00.000' AS DATECREATED
	FROM SATIVIDADE S
		INNER JOIN UATVCOMPALUNO U ON U.DESCRICAO = S.DESCRICAO AND S.CODMODALIDADE = U.CODGRPATVCOMP
						AND S.CARGAHOR = U.CARGAHORARIA
		INNER JOIN #RAHABLIT R ON R.RA = U.MATALUNO

	/*--TERMINAR A TRANSAÇÃO--*/
	IF @@ERROR <> 0
		BEGIN
			ROLLBACK TRANSACTION ALUNO_ATIVIDADE
			SELECT 'Desisto da vida'
		END
	ELSE
		BEGIN
			COMMIT TRANSACTION ALUNO_ATIVIDADE
			SELECT 'Qual a próxima treta?'
		END


/*-- Por fim, atualiza tabela GAUTOINC->SATIVIDADEALUNO->IDATIVIDADE --*/
BEGIN TRANSACTION ATZ_AUTOINC
	UPDATE GAUTOINC SET VALAUTOINC = (SELECT MAX(idatividade) FROM SATIVIDADEALUNO)
		WHERE CODAUTOINC = 'IDATIVIDADE'

	/*-- FINALIZA A TRANSACTION --*/
	IF @@ERROR <> 0
		BEGIN
			ROLLBACK TRANSACTION ATZ_AUTOINC
			SELECT 'Problemas ao atualizar a GAUTOINC -> IDATIVIDADE'
		END
	ELSE
		BEGIN
			COMMIT TRANSACTION ATZ_AUTOINC
			SELECT 'Tabela atualizada com sucesso. GAUTOINC -> IDATIVIDADE'
		END

/*-- Finalizada a operação de conversão!!! --*/